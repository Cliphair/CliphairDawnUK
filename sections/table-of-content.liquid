<style>
  details svg,
  .icon.icon-caret {
    width: 20px;
  }

  .mobile-facets__open,
  .back-top-top > span {
    position: fixed;
    right: 0;
    bottom: calc(10vh + 40px);
    width: 40px;
    height: 40px;
    display: flex;
    justify-content: center;
    border: 1px solid black;
    z-index: 2;
    min-width: unset;
    min-height: unset;
    padding: 0;
  }

  .table-of-contents__inner {
    position: relative;
  }

  .close-toc {
    position: absolute;
    bottom: calc(10vh + 40px);
    right: 0;
  }

  .back-top-top > span {
    bottom: calc(10vh - 5px);
    margin-top: 5px;
    transform: rotate(180deg);
  }

  .table-of-contents {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 100;
    background-color: rgba(var(--color-foreground), 0.5);
    pointer-events: none;
  }

  .table-of-contents__inner {
    background-color: rgb(var(--color-background));
    width: fit-content;
    margin-left: auto;
    height: 100%;
    overflow-y: auto;
    pointer-events: all;
    transition: transform var(--duration-default) ease;
    max-width: 37.5rem;
    display: flex;
    flex-direction: column;
    border-color: rgba(var(--color-foreground), var(--drawer-border-opacity));
    border-style: solid;
    border-width: 0 0 0 var(--drawer-border-width);
    filter: drop-shadow(
      var(--drawer-shadow-horizontal-offset) var(--drawer-shadow-vertical-offset) var(--drawer-shadow-blur-radius)
        rgba(var(--color-shadow), var(--drawer-shadow-opacity))
    );
    min-width: min(300px, calc(100% - 5rem));
  }

  .menu-opening .table-of-contents__inner {
    transform: translate(0);
  }

  .mobile-facets__close {
    display: none;
    align-items: center;
    justify-content: center;
    position: fixed;
    top: 0.7rem;
    right: 1rem;
    width: 4.4rem;
    height: 4.4rem;
    z-index: 101;
    opacity: 0;
    transition: opacity var(--duration-short) ease;
  }

  details.menu-opening .mobile-facets__close {
    display: flex;
    opacity: 1;
  }

  .table-of-contents__header {
    border-bottom: 0.1rem solid rgba(var(--color-foreground), 0.08);
    padding: 1rem 2.5rem;
    text-align: center;
    display: flex;
    position: sticky;
    top: 0;
    z-index: 2;
    min-height: 5.8rem;
  }

  .table-of-contents__header-inner {
    flex-grow: 1;
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .table-of-contents__header h2 {
    font-size: calc(var(--font-heading-scale) * 1.4rem);
    margin: 0;
  }

  .table-of-contents__list {
    padding: 2rem;
  }

  .table-of-contents ul {
    padding: 0;
    list-style: none;
    text-transform: uppercase;
    margin: 0;
  }

  .table-of-contents li {
    margin-bottom: 1.5rem;
    font-size: 1.2rem;
  }

  .table-of-contents li a {
    color: inherit;
    text-decoration: none;
    font-weight: 600;
    line-height: 1em;
    cursor: pointer;
  }

  .table-of-contents ul ul {
    padding-left: 1.5rem;
    text-transform: capitalize;
  }

  .table-of-contents ul ul li:first-of-type {
    margin-top: 1.5rem;
  }
</style>

<div>
  {% if section.blocks.size > 0 %}
    <menu-drawer>
      <details class="mobile-facets__disclosure disclosure-has-popup">
        <summary class="mobile-facets__open-wrapper focus-offset">
          <span class="mobile-facets__open button button--secondary">
            {% render 'icon-hamburger' %}
          </span>
          <span tabindex="0" class="mobile-facets__close mobile-facets__close--no-js">{%- render 'icon-close' -%}</span>
        </summary>
        <div class="table-of-contents">
          <div class="table-of-contents__inner">
            <div class="table-of-contents__header">
              <div class="table-of-contents__header-inner">
                <h2>Table Of Contents</h2>
              </div>
            </div>
            <div class="table-of-contents__list">
              <ul>
                {% for block in section.blocks %}
                  <li>
                    <a href="#{{ block.settings.link_id }}" title="Go to {{ block.settings.label }}">
                      {{- block.settings.label -}}
                    </a>
                  </li>
                {% endfor %}
              </ul>
              <div id="close-toc" class="close-toc">
                <span class="button button--secondary">Close Menu</span>
              </div>
            </div>
          </div>
        </div>
      </details>
    </menu-drawer>
  {% endif %}
  <div id="back-top-top" class="back-top-top visually-hidden">
    <span class="button">
      {% render 'icon-caret' %}
    </span>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('back-top-top');
    const closeToc = document.getElementById('close-toc');
    if (button) {
      window.addEventListener('scroll', () => {
        if (window.scrollY > 0) {
          button.classList.remove('visually-hidden');
        } else {
          button.classList.add('visually-hidden');
        }
      });

      button.addEventListener('click', () => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
      });
    }

    if (closeToc) {
      closeToc.addEventListener('click', (event) => {
        const tocDetails = closeToc.closest('menu-drawer');
        if (tocDetails) {
          tocDetails.closeMenuDrawer(event);
        }
      });
    }
  });
</script>

{% schema %}
{
  "name": "Table Of Contents",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [],
  "blocks": [
    {
      "type": "link",
      "name": "TOC Element",
      "settings": [
        {
          "type": "text",
          "label": "Element label",
          "id": "label"
        },
        {
          "type": "text",
          "id": "link_id",
          "label": "Element id",
          "info": "Id from the specific section you want to link send the customer to."
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Table Of Contents"
    }
  ]
}
{% endschema %}
