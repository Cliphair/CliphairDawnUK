{{ 'component-slider.css' | asset_url | stylesheet_tag }}
{{ 'quick-add.css' | asset_url | stylesheet_tag }}

<script src="{{ 'quick-add.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>

{% style %}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{% endstyle %}

<style>
    .available-shades__title {
      font-size: 1.7rem;
      line-height: 1.4em;
      letter-spacing: -2%;
      margin-bottom: 1.2rem;
    }

    .available-shades__list {
      padding: 0;
      list-style: none;
      display: flex;
      --grid-desktop-horizontal-spacing: 1.5rem;
      --grid-mobile-horizontal-spacing: 1.5rem;
    }

    .available-shades__list .available-shades__elements.grid__item {
      width: calc((100% - 90px - 3rem) / 6);
      min-width: 0;
      max-width: unset;
      flex-shrink: 0;
    }

    @media screen and (min-width: 750px) and (max-width: 989px) {
      .available-shades .slider.slider--tablet {
        scroll-padding-left: 5rem!important;
      }

      .available-shades .slider.slider--tablet:after {
        padding-left: 5rem!important;
      }

      .available-shades .available-shades__list .available-shades__elements.grid__item {
        width: calc((100% - 105px - 5rem) / 8);
      }

      .available-shades .available-shades__list .available-shades__elements.grid__item:first-of-type {
        margin-left: 5rem!important;
      }
    }

    @media screen and (min-width: 990px) {
      .available-shades .slider.slide-desktop-false{
        justify-content:flex-start;
      }

      .available-shades .available-shades__list .available-shades__elements.grid__item {
        width: calc((100% - 90px - 5rem) / 6);
        flex-grow:0;
      }
    }

    .available-shades__elements.selected {
      border: 1px solid black;
    }

    .available-shades__elements .shade-snippet {
      width: 100%;
      height: auto;
      aspect-ratio: 1/1;
      display: block;
      box-sizing: border-box;
      cursor:pointer;
    }

    .available-shades__elements.selected .shade-snippet {
      border: 4px solid white;
    }

    /* =====================================
     COLLECTION MODAL CARD (PREVIEW)
  ===================================== */
    .available-shades .product-modal-card {
      border: 1px solid;
      margin-top: 1rem;
      flex: 1;
      width:100%;
      max-width:359px;
      position: relative;
      margin:4.7rem auto 0;
    }

    .available-shades .product-modal-card .grid {
      flex-wrap: nowrap;
      height: 100%;
    }

    .available-shades .product-modal-card__image-wrapper {
      width: 35%;
      flex-grow: 0;
      flex-shrink: 0;
      position:relative;
    }

    .available-shades .product-modal-card__image-wrapper img {
      width: 100%;
      height: 100%;
      object-fit: cover;
      margin:0;
      display: block;
      object-position:top;
      position:absolute;
    }

    .available-shades .product-modal-card__text-wrapper {
      padding: 1.6rem 1.1rem 1.6rem 2.8rem;
      flex-grow: 1;
      text-align: left;
      display: flex;
      flex-direction: column;
      justify-content: space-between;
    }

    {% comment %} .available-shades .text-wrapper__top {
      margin-bottom: 1rem;
    } {% endcomment %}

    .available-shades .product-modal-card__text-wrapper  *,
    .available-shades .product-modal-card__text-wrapper  .price {
      font-size: 1.3rem;
      line-height: 1.5em;
      letter-spacing:0;
      margin:0;
    }

    .available-shades .text-wrapper__bottom{
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 1.3rem;
    }

    .available-shades .quick-add {
      margin:0;
      position:unset;
    }

    .available-shades .available-shades .collection-cta.button {
      font-size: 1rem;
      line-height: 1.2em;
      padding: 0.5rem;
      width: 100%;
      min-height: 0;
      box-sizing: border-box;
      min-width: unset;
    }

    .available-shades .quick-add__submit{
      background: none;
      padding: 0;
      color: rgba(var(--color-foreground), 1);
      min-height: 0;
      font-size: 1.3rem;
      line-height: 1.5em;
      letter-spacing: 0;
      position: unset;
      text-decoration: underline;
      text-underline-offset: .3rem;
    }

    .available-shades .quick-add__submit::before,
    .available-shades .quick-add__submit::after{
      content:none;
    }

    .available-shades .button.loading{
      position:unset;
    }

    .available-shades .button.loading > .loading-overlay__spinner{
      position: absolute;
      left: 0;
      right: 0;
      top: 0;
      bottom: 0;
      width: 100%;
      background: rgba(0,0,0,.7)!important;
      display: flex;
      justify-content: center;
      align-items: center;
      transform:translate(0, 0);
    }

    .loading-overlay__spinner > svg{
      height: 50%;
    }

    @media screen and (min-width:990px){
      .page-width-different-size{
        --page-width: 990px;
      }

      .available-shades{
        display:flex;
        padding:0 5rem;
        row-gap:1.5rem;
      }

      .available-shades > *{
        width:50%;
        padding:0;
      }

      .available-shades .product-modal-card__image-wrapper{
        width:45%;
      }

      .available-shades .available-shades__list{
        row-gap:1.5rem;
      }

      .available-shades .product-modal-card{
        margin:0 auto;
        height:100%;
        width:100%;
        max-width:unset;
      }

      .product-modal-card .product-modal-card__text-wrapper :not(div){
        font-size:1.8rem;
      }

    }
</style>

{% liquid
  assign collection = collections['flat-weft-hair-extensions']
  assign first_product = collection.products.first

  assign swipe_on_mobile = section.settings.swipe_on_mobile | default: true
  assign swipe_on_desktop = section.settings.swipe_on_desktop | default: false

  assign columns_mobile_int = 6
  assign show_mobile_slider = false
  if swipe_on_mobile and collection.products.size > columns_mobile_int
    assign show_mobile_slider = true
  endif

  assign columns_desktop_int = 6
  assign show_desktop_slider = false
  if swipe_on_desktop and collection.products.size > columns_desktop_int
    assign show_desktop_slider = true
  endif

  assign columns_tablet = 8
  if collection.products.size > columns_tablet and swipe_on_mobile
    assign show_tablet_slider = true
  endif
%}
<div class="color-{{ section.settings.color_scheme }} gradient section-{{ section.id }}-padding">
  <div
    class="page-width isolate no-heading no-mobile-link {{ section.settings.text_allignment }} page-width-different-size"
    style="padding:0!important;"
  >
    {%- unless section.settings.title == blank -%}
      <div class="title-wrapper title-wrapper--no-top-margin page-width">
        <h2
          id="SectionHeading-{{ section.id }}"
          class="inline-richtext {{ section.settings.heading_size }}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
        >
          {{ section.settings.title }}
        </h2>
      </div>
    {%- endunless -%}

    <div class="available-shades">
      <slider-component
        data-visual="{{ section.settings.slider_visual }}"
        class="slider-mobile-gutter{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}"
      >
        <ul
          id="Slider-{{ section.id }}"
          role="list"
          class="available-shades__list grid grid--{{ columns_desktop_int }}-col-desktop grid--{{ columns_tablet }}-col-tablet grid--{{ columns_mobile_int }}-col-tablet-down{% if swipe_on_mobile or swipe_on_desktop %} slider grid--peek{% endif %}{% if swipe_on_mobile %} slider--tablet{% endif %}{% if swipe_on_desktop %} slider--desktop{% endif %} list--{{ collection.products.size }}-items slide-mobile-{{ show_mobile_slider }} slide-tablet-{{ show_tablet_slider }} slide-desktop-{{ show_desktop_slider }}"
        >
          {% for product in collection.products %}
            {% if product.metafields.custom.colour_name and product.metafields.custom.colour_name != blank %}
              {% liquid
                assign image_handle = product.metafields.custom.colour_name | handle | append: '-snippet.webp'
                assign shade_image = images[image_handle]
              %}
              {% if shade_image %}
                <li
                  id="Slide-{{ section.id }}-{{ forloop.index }}"
                  class="available-shades__elements grid__item {% if show_mobile_slider or show_tablet_slider or show_desktop_slider %} slider__slide{% endif %}{% if settings.animations_reveal_on_scroll %} scroll-trigger animate--slide-in{% endif %}{%  if forloop.first %} selected{% endif %}"
                  {% if settings.animations_reveal_on_scroll %}
                    data-cascade
                    style="--animation-order: {{ forloop.index }};"
                  {% endif %}
                >
                  <div
                    class="product-info"
                    data-url="{{ product.url }}"
                    data-start-price="{{ product.price_min | money_without_currency }}"
                    data-image-url="{{ product.featured_image | image_url: width: 533 }}"
                    data-shade="{{ product.metafields.custom.colour_name }}"
                  >
                    <img
                      srcset="
                        {%- if shade_image.width >= 165 -%}{{ shade_image | image_url: width: 165 }} 165w,{%- endif -%}
                        {%- if shade_image.width >= 360 -%}{{ shade_image | image_url: width: 360 }} 360w,{%- endif -%}
                        {%- if shade_image.width >= 533 -%}{{ shade_image | image_url: width: 533 }} 533w,{%- endif -%}
                        {%- if shade_image.width >= 720 -%}{{ shade_image | image_url: width: 720 }} 720w,{%- endif -%}
                        {%- if shade_image.width >= 940 -%}{{ shade_image | image_url: width: 940 }} 940w,{%- endif -%}
                        {%- if shade_image.width >= 1066 -%}{{ shade_image | image_url: width: 1066 }} 1066w,{%- endif -%}
                        {{ shade_image | image_url }} {{ shade_image.width }}w
                      "
                      src="{{ shade_image | image_url: width: 533 }}"
                      sizes="(min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 130 | divided_by: 4 | times: 0.4 }}px, (min-width: 990px) calc((100vw - 130px) / 4 * 0.4), (min-width: 750px) calc((100vw - 120px) / 3 * 0.4), calc((100vw - 35px) / 2 * 0.4)"
                      alt=""
                      class="motion-reduce shade-snippet"
                      loading="lazy"
                      width="{{ shade_image.width }}"
                      height="{{ shade_image.height }}"
                    >
                  </div>
                </li>
                {% assign first_product = product %}
              {% endif %}
            {% endif %}
          {% endfor %}
          {%- if show_mobile_slider or show_tablet_slider or show_desktop_slider -%}
            <div class="slider-buttons hidden slider-buttons-square no-js-hidden slider--{{ columns_desktop_int }}-col-desktop slider--{{ columns_mobile_int }}-col-tablet-down">
              <button
                type="button"
                class="slider-button slider-button--prev"
                name="previous"
                aria-label="{{ 'general.slider.previous_slide' | t }}"
              >
                {% render 'icon-caret' %}
              </button>

              <div class="slider-counter caption visually-hidden">
                <span class="slider-counter--current">1</span>
                <span aria-hidden="true"> / </span>
                <span class="visually-hidden">{{ 'general.slider.of' | t }}</span>
                <span class="slider-counter--total">{{ collection.products.size }}</span>
              </div>

              <button
                type="button"
                class="slider-button slider-button--next"
                name="next"
                aria-label="{{ 'general.slider.next_slide' | t }}"
              >
                {% render 'icon-caret' %}
              </button>
            </div>
          {%- endif -%}
        </ul>
      </slider-component>
      <div class="page-width">
        {% render 'product-quick-add-card', title: 'Halo Extensions', card_product: first_product %}
      </div>
    </div>
  </div>
</div>

<script>
  (() => {
    // Scope to this section only
    const sectionRoot = document.querySelector('.section-{{ section.id }}-padding');
    if (!sectionRoot) return;

    const shadeItems = sectionRoot.querySelectorAll('.available-shades__elements');
    const card = sectionRoot.querySelector('.product-modal-card');
    if (!card || !shadeItems.length) return;

    const cardImg = card.querySelector('.product-modal-card__image-wrapper img');
    const shadeEl = card.querySelector('.text-wrapper__top .shade_name');
    const priceEl = card.querySelector('.text-wrapper__bottom .product_price');
    const quickAddBtn = card.querySelector('.quick-add__submit[data-product-url]');

    function updateCardFrom(el) {
      const info = el.querySelector('.product-info');
      if (!info) return;

      const url = info.dataset.url || '';
      const startPrice = info.dataset.startPrice || '';
      const imageUrl = info.dataset.imageUrl || '';
      const shade = info.dataset.shade || '';

      // Update selected state
      shadeItems.forEach((li) => li.classList.remove('selected'));
      el.classList.add('selected');

      // Update image
      if (cardImg && imageUrl) {
        cardImg.src = imageUrl;
        // Clear srcset/sizes so we don't keep stale responsive candidates
        cardImg.removeAttribute('srcset');
        cardImg.removeAttribute('sizes');
        // Optional: ensure loading eager after swap (keeps it snappy)
        cardImg.loading = 'eager';
        cardImg.decoding = 'sync';
      }

      // Update shade text
      if (shadeEl) {
        shadeEl.textContent = shade;
      }

      // Update price
      if (priceEl && startPrice) {
        priceEl.textContent = startPrice;
      }

      // Update Quick Add fetch target
      if (quickAddBtn && url) {
        quickAddBtn.setAttribute('data-product-url', url);
      }
    }

    // Initialize from the preselected item (first has .selected) or fallback to first
    const initiallySelected = sectionRoot.querySelector('.available-shades__elements.selected') || shadeItems[0];
    if (initiallySelected) updateCardFrom(initiallySelected);

    // Wire up clicks
    shadeItems.forEach((li) => {
      li.addEventListener('click', (e) => {
        // If keyboard accessibility is needed, you can also listen to keydown Enter/Space here.
        updateCardFrom(li);
      });
    });
  })();
</script>
{% schema %}
{
  "name": "Quick add by shade",
  "tag": "section",
  "class": "section section-quick-add-by-shade",
  "disabled_on": {
    "groups": ["header", "footer"]
  },
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "label": "Heading"
    },
    {
      "type": "select",
      "id": "heading_size",
      "options": [
        {
          "value": "h2",
          "label": "Small"
        },
        {
          "value": "h1",
          "label": "Medium"
        },
        {
          "value": "h0",
          "label": "Large"
        }
      ],
      "default": "h1",
      "label": "Heading size"
    },
    {
      "type": "richtext",
      "id": "introduction",
      "label": "Introduction"
    },
    {
      "type": "header",
      "content": "Section button"
    },
    {
      "type": "text",
      "id": "button_label",
      "label": "Button label"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Button link"
    },
    {
      "type": "checkbox",
      "default": false,
      "id": "button_style_secondary",
      "label": "Use outline button style"
    },
    {
      "type": "select",
      "id": "text_allignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left",
      "label": "Text allignment"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "landscape",
          "label": "Landscape"
        },
        {
          "value": "portrait",
          "label": "Portrait"
        },
        {
          "value": "square",
          "label": "Square"
        }
      ],
      "default": "square",
      "label": "Image ratio"
    },
    {
      "type": "checkbox",
      "id": "hide_card_arrow",
      "default": false,
      "label": "Hide card arrow"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 3,
      "label": "Number of columns on desktop"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_desktop",
      "default": false,
      "label": "Enable swipe on desktop"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "background-1"
    },
    {
      "type": "header",
      "content": "Mobile Layout"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "options": [
        {
          "value": "1",
          "label": "1 column"
        },
        {
          "value": "2",
          "label": "2 columns"
        },
        {
          "value": "3",
          "label": "3 columns"
        }
      ],
      "default": "1",
      "label": "Number of columns on mobile"
    },
    {
      "type": "checkbox",
      "id": "swipe_on_mobile",
      "default": false,
      "label": "Enable swipe on mobile"
    },
    {
      "type": "select",
      "id": "slider_visual",
      "options": [
        {
          "value": "dots",
          "label": "t:sections.slideshow.settings.slider_visual.options__2.label"
        },
        {
          "value": "counter",
          "label": "t:sections.slideshow.settings.slider_visual.options__1.label"
        },
        {
          "value": "numbers",
          "label": "t:sections.slideshow.settings.slider_visual.options__3.label"
        }
      ],
      "default": "counter",
      "label": "t:sections.slideshow.settings.slider_visual.label"
    },
    {
      "type": "header",
      "content": "Section Padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 36
    }
  ],
  "presets": [
    {
      "name": "Quick add by shade",
      "blocks": []
    }
  ]
}
{% endschema %}
